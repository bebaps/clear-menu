// General Settings
// -----------------------------------------------------------------------------
$cm-flexbox: true !default;
$cm-submenus: false !default;
$cm-breakpoint: '768px' !default;

// Colors
// -----------------------------------------------------------------------------
$cm-color_white: rgb(255, 255, 255) !default;
$cm-color_black: rgb(0, 0, 0) !default;
$cm-color_overlay: $cm-color_black !default;
$cm-color_trigger: $cm-color_white !default;
$cm-color_button: rgb(238, 238, 238) !default;
$cm-color_open: rgb(245, 245, 245) !default;
$cm-color_closed: rgb(218, 73, 73) !default;
$cm-color_hover: rgb(127, 218, 137) !default;

// Button Settings
// -----------------------------------------------------------------------------
$cm-button_position: fixed !default;
$cm-button_top: 5% !default;
$cm-button_right: 5% !default;

// Overlay Settings
// -----------------------------------------------------------------------------
$cm-overlay_width: 100% !default;
$cm-overlay_height: 100% !default;
$cm-overlay_position: fixed !default;
$cm-overlay_top: 0 !default;
$cm-overlay_left: 0 !default;
$cm-overlay_transition: ease-in-out !default;
$cm-overlay_speed: 0.25s !default;

// Menu Settings
// -----------------------------------------------------------------------------
$cm-menu_width: 90% !default;
$cm-menu_position: relative !default;
$cm-menu_top: 20% !default;
$cm-menu_font-family: inherit !default;
$cm-menu_font-size: 1.75rem !default;

// Hamburger Settings - Modified from https://github.com/jonsuh/hamburgers
// -----------------------------------------------------------------------------
$cm-hamburger_padding-x: 10px !default;
$cm-hamburger_padding-y: 10px !default;
$cm-hamburger_width: 40px !default;
$cm-hamburger_height: 4px !default;
$cm-hamburger_spacing: 6px !default;
$cm-hamburger_color: $cm-color_black !default;
$cm-hamburger_color-active: $cm-color_closed !default;
$cm-hamburger_border-radius: 4px !default;
$cm-hamburger_hover-opacity: 0.7 !default;
$cm-hamburger_hover-transition-duration: 0.15s !default;
$cm-hamburger_hover-transition-timing-function: linear !default;

// To use CSS filters as the hover effect instead of opacity,
// set $cm-hamburger_hover-use-filter as true and
// change the value of $cm-hamburger_hover-filter accordingly.
$cm-hamburger_hover-use-filter: false !default;
$cm-hamburger_hover-filter: opacity(50%) !default;

/* -----------------------------------------------------------------------------
  # Custom Fonts
----------------------------------------------------------------------------- */
@font-face {
  font-family: 'clear';
  src: url(../fonts/clear.eot?1maawd);
  src: url(../fonts/clear.eot?1maawd#iefix) format('embedded-opentype'),
    url(../fonts/clear.ttf?1maawd) format('truetype'),
    url(../fonts/clear.woff?1maawd) format('woff'),
    url(../fonts/clear.svg?1maawd#clear) format('svg');
  font-weight: normal;
  font-style: normal;
}

[class^='cm-icon-'],
[class*='cm-icon-'] {
  font-family: 'clear' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.cm-icon-arrow {
  &::before {
    content: '\ea50';
  }
}

/* -----------------------------------------------------------------------------
  # Overlay
----------------------------------------------------------------------------- */
.cm-overlay {
  width: $cm-overlay_width;
  height: $cm-overlay_height;

  position: $cm-overlay_position;
  top: $cm-overlay_top;
  left: $cm-overlay_left;
  z-index: 10;

  background: $cm-color_overlay;
  opacity: 1;
  visibility: hidden;
  transition: all $cm-overlay_speed $cm-overlay_transition;
  overflow: scroll;

  -webkit-transform: translateZ(0);
  -webkit-backface-visibility: hidden;

  @if ($cm-flexbox) {
    display: flex;
    flex-flow: column nowrap;
    align-items: center;
  }

  * {
    color: $cm-color_white;
  }
}

.cm-reveal-top {
  transform: translateY(-100%);
}

.cm-reveal-bottom {
  transform: translateY(100%);
}

.cm-reveal-left {
  transform: translateX(-100%);
}

.cm-reveal-right {
  transform: translateX(100%);
}

.cm-reveal-fade {
  opacity: 0;
}

.cm-is-visible {
  visibility: visible;
  transform: translateY(0);
  opacity: 1;
}

/* -----------------------------------------------------------------------------
  # Menu
----------------------------------------------------------------------------- */
.cm-menu {
  margin: 0;
  padding: 0;
  position: $cm-menu_position;
  top: $cm-menu_top;
  width: $cm-menu_width;
  list-style-type: none;

  @if ($cm-flexbox) {
    display: flex;
    flex-flow: column nowrap;

    @media screen and (orientation: landscape) and (max-width: $cm-breakpoint) {
      width: 50%;
      flex-flow: row wrap;
    }

    li {
      flex: 1 auto;

      @media screen and (orientation: landscape) and (max-width: $cm-breakpoint) {
        flex: 1 50%;
      }
    }
  }

  a {
    position: relative;
    display: block;
    padding: 0.25em 0;
    overflow: hidden;
    text-decoration: none;
    color: $cm-color_white;
    font-size: $cm-menu_font-size;
    font-family: $cm-menu_font-family;

    &:hover {
      color: rgba($cm-color_white, 0.5);
      transition: all 0.35s ease-in-out;
    }
  }
}

/* ---------------------------------------------------------
  ## Sub Menu
--------------------------------------------------------- */
@if ($cm-submenus) {
  .cm-has-submenu {
    position: relative;

    @if ($cm-flexbox) {
      display: flex;
      flex-flow: row wrap;
      justify-content: space-between;

      > a {
        flex: 1 0 75%;
        order: 1;
      }
    }

    > ul {
      margin: 0;
      padding: 0;
      display: none;

      @if ($cm-flexbox) {
        order: 3;
      }

      a {
        position: relative;
        font-size: 1rem;
        padding: 0.5em 2em;
      }
    }
  }
}

/* -----------------------------------------------------------------------------
  # Sub Menu Trigger
----------------------------------------------------------------------------- */
.cm-submenu-trigger {
  background: transparent;
  border: none;

  @if ($cm-flexbox) {
    flex: auto;
    order: 2;

    display: flex;
    justify-content: flex-end;
  }

  img {
    width: 30px;
    height: auto;
  }

  &::after {
    content: '\ea50';
    font-family: 'clear' !important;
    font-size: 3rem;
    color: $cm-color_trigger;
    line-height: 1;
    speak: none;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    height: 0;
    transform: rotate(90deg);
    transition: all 0.2s ease-in-out;
  }

  .cm-has-submenu-open {
    &::after {
      transform: rotate(180deg);
      height: 25px;
      margin-right: 10px;
    }
  }
}

/*------------------------------------------------------------------------------
  # Hamburger Button - Modified from https://github.com/jonsuh/hamburgers
------------------------------------------------------------------------------*/
.cm-hamburger {
  position: $cm-button_position;
  top: $cm-button_top;
  right: $cm-button_right;
  z-index: 100;

  padding: $cm-hamburger_padding-y $cm-hamburger_padding-x;

  @if ($cm-flexbox) {
    display: flex;
  } @else {
    display: inline-block;
  }

  cursor: pointer;
  background-color: $cm-color_button;
  transition-property: opacity, filter;
  transition-duration: $cm-hamburger_hover-transition-duration;
  transition-timing-function: $cm-hamburger_hover-transition-timing-function;

  &:hover {
    @if ($cm-hamburger_hover-use-filter == true) {
      filter: $cm-hamburger_hover-filter;
    } @else {
      opacity: $cm-hamburger_hover-opacity;
      background: none;
    }
  }
}

.cm-hamburger-bun {
  width: $cm-hamburger_width;
  height: $cm-hamburger_height * 3 + $cm-hamburger_spacing * 2;
  display: inline-block;
  position: relative;
}

.cm-hamburger-meat {
  display: block;
  top: 50%;
  margin-top: $cm-hamburger_height / -2;

  &,
  &::before,
  &::after {
    width: $cm-hamburger_width;
    height: $cm-hamburger_height;
    background-color: $cm-hamburger_color;
    border-radius: $cm-hamburger_border-radius;
    position: absolute;
    transition-property: transform;
    transition-duration: 0.15s;
    transition-timing-function: ease;
  }

  &::before,
  &::after {
    content: '';
    display: block;
  }

  &::before {
    top: ($cm-hamburger_spacing + $cm-hamburger_height) * -1;
  }

  &::after {
    bottom: ($cm-hamburger_spacing + $cm-hamburger_height) * -1;
  }
}

/* ---------------------------------------------------------
  ## Slider Hamburger
--------------------------------------------------------- */
.cm-hamburger-slider {
  .cm-hamburger-meat {
    top: $cm-hamburger_height / 2;

    &::before {
      top: $cm-hamburger_height + $cm-hamburger_spacing;
      transition-property: transform, opacity;
      transition-timing-function: ease;
      transition-duration: 0.2s;
    }

    &::after {
      top: ($cm-hamburger_height * 2) + ($cm-hamburger_spacing * 2);
    }
  }

  &.cm-is-active {
    .cm-hamburger-meat {
      $y-offset: $cm-hamburger_spacing + $cm-hamburger_height;

      transform: translate3d(0, $y-offset, 0) rotate(45deg);
      background-color: $cm-hamburger_color-active;

      &::before {
        transform: rotate(-45deg) translate3d($cm-hamburger_width / -7, $cm-hamburger_spacing * -1, 0);
        opacity: 0;
        background-color: $cm-hamburger_color-active;
      }

      &::after {
        transform: translate3d(0, $y-offset * -2, 0) rotate(-90deg);
        background-color: $cm-hamburger_color-active;
      }
    }
  }
}
