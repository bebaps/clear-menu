// Improved hamburger icon, stolen from https://github.com/jonsuh/hamburgers
// Changed some class names out of personal preference

/*--------------------------------------------------------------------------------------------------
  Hamburger Icon
--------------------------------------------------------------------------------------------------*/
.cm-hamburger {
  position: fixed;
  top: 5%;
  right: 5%;

  z-index: 100;

  padding: $hamburger-padding-y $hamburger-padding-x;
  display: inline-block;
  cursor: pointer;

  transition-property: opacity, filter;
  transition-duration: $hamburger-hover-transition-duration;
  transition-timing-function: $hamburger-hover-transition-timing-function;

  // Normalize (<button>)
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible;

  &:hover {
    @if $hamburger-hover-use-filter == true {
      filter: $hamburger-hover-filter;
    }
    @else {
      opacity: $hamburger-hover-opacity;
    }
  }
}

.cm-hamburger-bun {
  width: $hamburger-layer-width;
  height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;
  display: inline-block;
  position: relative;
}

.cm-hamburger-meat {
  display: block;
  top: 50%;
  margin-top: $hamburger-layer-height / -2;

  &,
  &::before,
  &::after {
    width: $hamburger-layer-width;
    height: $hamburger-layer-height;
    background-color: $hamburger-layer-color;
    border-radius: $hamburger-layer-border-radius;
    position: absolute;
    transition-property: transform;
    transition-duration: 0.15s;
    transition-timing-function: ease;
  }

  &::before,
  &::after {
    content: "";
    display: block;
  }

  &::before {
    top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
  }

  &::after {
    bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
  }
}


// Slider Hamburger Style
// -----------------------------------------------------------------------------
.cm-hamburger-slider {
  .cm-hamburger-meat {
    top: $hamburger-layer-height / 2;

    &::before {
      top: $hamburger-layer-height + $hamburger-layer-spacing;
      transition-property: transform, opacity;
      transition-timing-function: ease;
      transition-duration: 0.2s;
    }

    &::after {
      top: ($hamburger-layer-height * 2) + ($hamburger-layer-spacing * 2);
    }
  }

  &.cm-is-active {
    .cm-hamburger-meat {
      $y-offset: $hamburger-layer-spacing + $hamburger-layer-height;

      transform: translate3d(0, $y-offset, 0) rotate(45deg);
      background-color: $hamburger-layer-color-active;

      &::before {
        transform: rotate(-45deg) translate3d($hamburger-layer-width / -7, $hamburger-layer-spacing * -1, 0);
        opacity: 0;
        background-color: $hamburger-layer-color-active;
      }

      &::after {
        transform: translate3d(0, $y-offset * -2, 0) rotate(-90deg);
        background-color: $hamburger-layer-color-active;
      }
    }
  }
}
